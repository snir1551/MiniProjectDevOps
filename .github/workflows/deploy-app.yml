name: Deploy to Azure VM 

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      vm_ip:
        required: true
        type: string
      environment:
        description: "Environment (dev/prod)"
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Write SSH key
        run: |
          echo "${{ secrets.VM_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Create .env file
        run: |
          echo "${{ secrets.ENV_FILE }}" > app/.env
          echo "REACT_APP_API_URL=http://${{ inputs.vm_ip }}:8080" >> app/.env

       

      - name: Docker Cleanup on VM
        run: |
          ssh -i key.pem azureuser@${{ inputs.vm_ip }} << 'EOF'
            cd /home/azureuser/MiniProject/app
            sudo docker-compose -f docker-compose.yml -f docker-compose.${{ inputs.environment }}.yml down --remove-orphans
            sudo docker system prune -af --volumes
          EOF

      - name: Debug SSH command
        run: echo "ssh -i key.pem -o StrictHostKeyChecking=no azureuser@${{ inputs.vm_ip }}"

      - name: Sync app folder to Azure VM
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no azureuser@${{ inputs.vm_ip }} "mkdir -p /home/azureuser/MiniProject/app"
          rsync -az --delete --exclude='.git' --exclude='node_modules' -e "ssh -i key.pem -o StrictHostKeyChecking=no" ./app/ azureuser@${{ inputs.vm_ip }}:/home/azureuser/MiniProject/app/

      - name: Run setup script on VM
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no azureuser@${{ inputs.vm_ip }} << 'EOF'
            cd /home/azureuser/MiniProject/app/scripts
            chmod +x setup.sh
            ./setup.sh
          EOF

      - name: Deploy with Docker Compose
        env:
          ENVIRONMENT: ${{ inputs.environment }}
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no azureuser@${{ inputs.vm_ip }} "
            cd /home/azureuser/MiniProject/app &&
            sudo docker-compose -f docker-compose.yml -f docker-compose.${ENVIRONMENT}.yml down --remove-orphans
            sudo docker-compose -f docker-compose.yml -f docker-compose.${ENVIRONMENT}.yml up -d --build
          "

      - name: Healthcheck and get logs
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no azureuser@${{ inputs.vm_ip }} "
            sudo docker ps
          " > remote_logs.txt

      - name: Get Docker logs from VM
        run: |
          ssh -i key.pem azureuser@${{ inputs.vm_ip }} <<EOF > remote_logs.txt
            cd /home/azureuser/MiniProject/app
            sudo docker-compose -f docker-compose.yml -f docker-compose.${{ inputs.environment }}.yml ps
            sudo docker-compose -f docker-compose.yml -f docker-compose.${{ inputs.environment }}.yml logs --tail=50
          EOF

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: remote-logs
          path: remote_logs.txt

      - name: Cleanup SSH key
        run: rm key.pem

      - name: Cleanup .env file
        if: always()
        run: rm -f app/.env
