name: Deploy to Azure VM 

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      vm_ip:
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Write SSH key
        run: |
          echo "${{ secrets.VM_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Create .env file
        run: echo "${{ secrets.ENV_FILE }}" > app/.env

      # - name: Clean Docker on VM
      #   run: |
      #     ssh -i key.pem -o StrictHostKeyChecking=no azureuser@${{ inputs.vm_ip }} "
      #       echo 'Cleaning Docker environment...'

      #       containers=\$(docker ps -q)
      #       if [ -n \"\$containers\" ]; then
      #         echo 'Stopping running containers...'
      #         docker stop \$containers
      #       else
      #         echo 'No running containers to stop.'
      #       fi

      #       sudo docker container prune -f
      #       sudo docker image prune -af
      #       sudo docker network prune -f

      #       volumes=\$(docker volume ls -q)
      #       if [ -n \"\$volumes\" ]; then
      #         echo 'Removing all Docker volumes...'
      #         docker volume rm \$volumes
      #       else
      #         echo 'No Docker volumes to remove.'
      #       fi
      #     "

      - name: Debug SSH command
        run: echo "ssh -i key.pem -o StrictHostKeyChecking=no azureuser@${{ inputs.vm_ip }}"

      - name: Sync app folder to Azure VM
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no azureuser@${{ inputs.vm_ip }} "mkdir -p /home/azureuser/MiniProject/app"
          rsync -az --delete --exclude='.git' --exclude='node_modules' -e "ssh -i key.pem -o StrictHostKeyChecking=no" ./app/ azureuser@${{ inputs.vm_ip }}:/home/azureuser/MiniProject/app/

      - name: Deploy with Docker Compose
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no azureuser@${{ inputs.vm_ip }} "
            cd /home/azureuser/MiniProject/app &&
            sudo docker-compose down --remove-orphans &&
            sudo docker-compose up -d --build
          "

      - name: Healthcheck and get logs
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no azureuser@${{ inputs.vm_ip }} "
            sudo docker ps
          " > remote_logs.txt

      - name: Logs from Azure VM
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no azureuser@${{ inputs.vm_ip }} "
            cd /home/azureuser/MiniProject/app
            sudo docker-compose ps
            sudo docker-compose logs --tail=50
          " > remote_logs.txt

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: remote-logs
          path: remote_logs.txt

      - name: Cleanup SSH key
        run: rm key.pem

      - name: Cleanup .env file
        if: always()
        run: rm -f app/.env
